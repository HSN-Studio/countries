{"version":3,"sources":["components/Country.js","components/Countries.js","components/Search.js","components/Filter.js","components/Header.js","components/Paginations.js","components/CountryDetails.js","App.js","index.js"],"names":["Country","data","darkMode","handler","className","onClick","country","name","common","replace","to","alt","src","flags","area","toString","region","capital","Countries","page","setCountry","start","end","sort","a","b","slice","map","Search","changeHandler","type","placeholder","onChange","Filter","FormControl","fullWidth","variant","sx","border","outline","InputLabel","id","Select","labelId","value","label","MenuItem","Header","clickHandler","Paginations","resultsCount","pageCount","Math","ceil","Stack","spacing","Pagination","count","shape","color","_","CountryDetails","App","useState","countries","setcountries","searchRes","setsearchRes","setregion","pageNo","setpageNo","setdarkMode","countrySelected","setcountrySelected","useEffect","loadCountries","continent","fetch","then","res","json","document","body","classList","toggle","exact","path","e","length","target","searchResults","filter","includes","toLowerCase","filteredResults","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0a017d94.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Country({ data, darkMode, handler }) {\r\n  const sendName = (country) => {\r\n    handler(country);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`country ${darkMode}`}\r\n      onClick={() => sendName(data.name.common.replace(\" \", \"-\"))}\r\n    >\r\n      <Link to={data.name.common.replace(\" \", \"-\")}>\r\n        <img alt=\"country-flag\" src={data.flags[0]} className=\"flag\"></img>\r\n\r\n        <div className=\"country-details\">\r\n          <h2>{data.name.common}</h2>\r\n          <div className=\"population\">\r\n            <p>\r\n              <b>Area:</b>{\" \"}\r\n              {data.area.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n                \" km2\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"region\">\r\n            <p>\r\n              <b>Region:</b> {data.region}\r\n            </p>\r\n          </div>\r\n          <div className=\"capital\">\r\n            <p>\r\n              <b>Capital:</b> {data.capital}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport Country from \"./Country\";\r\nfunction Countries({ data, page, darkMode, handler }) {\r\n  const setCountry = (country) => {\r\n    handler(country);\r\n  };\r\n  if (!data) return null;\r\n  const resPerPage = 20,\r\n    start = (page - 1) * resPerPage,\r\n    end = page * resPerPage;\r\n  const dataPortion = data\r\n    .sort((a, b) => (a.name.common > b.name.common ? 1 : -1))\r\n    .slice(start, end);\r\n  const countries = dataPortion.map((country) => {\r\n    return <Country data={country} darkMode={darkMode} handler={setCountry} />;\r\n  });\r\n  // Regular Methods\r\n  const loadCountries = function (countries) {\r\n    countries.map((country) => <Country country={country} />);\r\n  };\r\n\r\n  return countries;\r\n}\r\n\r\nexport default Countries;\r\n","import React from \"react\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\n\r\nfunction Search({ changeHandler, darkMode }) {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <BiSearchAlt2 className={`search-icon ${darkMode}`} />\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search for a country...\"\r\n        onChange={changeHandler}\r\n        className={`${darkMode}`}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, Select, InputLabel, MenuItem } from \"@mui/material\";\r\n\r\nfunction Filter({ changeHandler, region, darkMode }) {\r\n  // States\r\n\r\n  // Regular Functions\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <FormControl\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        sx={{ border: \"none\", outline: \"none\" }}\r\n      >\r\n        <InputLabel id=\"filter-label\" className={`${darkMode}`}>\r\n          Filter by Region:\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"filter-label\"\r\n          id=\"filter\"\r\n          value={region}\r\n          label=\"filter\"\r\n          onChange={changeHandler}\r\n          className={`${darkMode}`}\r\n        >\r\n          <MenuItem value=\"None\" className=\"menu-item\" id=\"top\">\r\n            All Countries\r\n          </MenuItem>\r\n          <MenuItem value={\"Africa\"} className=\"menu-item\">\r\n            Africa\r\n          </MenuItem>\r\n          <MenuItem value={\"Americas\"} className=\"menu-item\">\r\n            America\r\n          </MenuItem>\r\n          <MenuItem value={\"Asia\"} className=\"menu-item\">\r\n            Asia\r\n          </MenuItem>\r\n          <MenuItem value={\"Europe\"} className=\"menu-item\">\r\n            Europe\r\n          </MenuItem>\r\n          <MenuItem value={\"Oceania\"} className=\"menu-item\">\r\n            Oceania\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { RiMoonClearLine, RiMoonClearFill } from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header({ clickHandler, darkMode }) {\r\n  return (\r\n    <div className={`header ${darkMode}`}>\r\n      <Link to=\"/\">\r\n        <h1 className=\"title\">Where in the World?</h1>\r\n      </Link>\r\n      <button className={`toggle ${darkMode}`} onClick={clickHandler}>\r\n        {darkMode === \"\" ? (\r\n          <RiMoonClearLine className=\"icon\" />\r\n        ) : (\r\n          <RiMoonClearFill className=\"icon\" />\r\n        )}\r\n\r\n        <p>Dark Mode</p>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function Paginations({ changeHandler, resultsCount }) {\r\n  if (resultsCount === 0) return null;\r\n  let pageCount = Math.ceil(resultsCount / 20);\r\n  return (\r\n    <Stack spacing={2} className=\"pagination\">\r\n      <Pagination\r\n        count={pageCount}\r\n        shape=\"rounded\"\r\n        color=\"primary\"\r\n        onChange={(_, page) => changeHandler(page)}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CountryDetails() {\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <h1>Back to Home</h1>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryDetails;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Countries from \"./components/Countries\";\nimport Search from \"./components/Search\";\nimport Filter from \"./components/Filter\";\nimport Header from \"./components/Header\";\nimport Paginations from \"./components/Paginations\";\nimport CountryDetails from \"./components/CountryDetails\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  //States\n  const [countries, setcountries] = useState(``);\n  const [searchRes, setsearchRes] = useState(``);\n  const [region, setregion] = useState(``);\n  const [pageNo, setpageNo] = useState(1);\n  const [darkMode, setdarkMode] = useState(\"\");\n  const [countrySelected, setcountrySelected] = useState(\"\");\n\n  //LifeCycle Hooks\n  useEffect(() => {\n    loadCountries();\n  }, []);\n\n  //Regular Methods\n  const loadCountries = function (continent) {\n    if (!continent) {\n      fetch(\"https://restcountries.com/v3/all\")\n        .then((res) => res.json())\n        .then((data) => {\n          setcountries(data);\n          setsearchRes(data);\n        });\n    }\n  };\n\n  const changeHandler = (e) => {\n    if (countries.length < 1) return null;\n    setpageNo(1);\n    if (e.target.value.length < 1) setsearchRes(countries);\n    const searchResults = countries.filter(\n      (country) =>\n        country.name.common.includes(e.target.value) ||\n        country.name.common.toLowerCase().includes(e.target.value)\n    );\n    if (searchResults.length > 0) {\n      setsearchRes(searchResults);\n    }\n  };\n\n  const filterHandler = (e) => {\n    // While results are loaded.\n    if (searchRes.length < 1) return null;\n    setpageNo(1);\n    // Set filter value\n    setregion(e.target.value);\n    // When No filter is applied\n    if (e.target.value === \"None\") setsearchRes(countries);\n    // When filter is selected\n    const filteredResults = countries.filter((country) => {\n      if (country.region === e.target.value) return country;\n    });\n    if (e.target.value !== \"None\") setsearchRes(filteredResults);\n  };\n\n  const paginationHandler = (pageNo) => {\n    console.log(pageNo);\n    if (searchRes.length < 1) return;\n    setpageNo(pageNo);\n  };\n\n  const darkModeHandler = () => {\n    darkMode === \"\" ? setdarkMode(\"dark-mode\") : setdarkMode(\"\");\n    document.body.classList.toggle(\"dark-mode-bg\");\n  };\n\n  const selCountryHandler = (country) => {\n    setcountrySelected(country);\n  };\n  //JSX\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header clickHandler={darkModeHandler} darkMode={darkMode} />\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"search-filter\">\n              <Search changeHandler={changeHandler} darkMode={darkMode} />\n              <Filter\n                changeHandler={filterHandler}\n                region={region}\n                darkMode={darkMode}\n              />\n            </div>\n            <div className=\"countries-container\">\n              <Countries\n                data={searchRes}\n                page={pageNo}\n                darkMode={darkMode}\n                handler={selCountryHandler}\n              />\n            </div>\n            <Paginations\n              changeHandler={paginationHandler}\n              resultsCount={searchRes.length}\n              darkMode={darkMode}\n            />\n          </Route>\n          <Route exact path={`/${countrySelected}`}>\n            <CountryDetails />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}