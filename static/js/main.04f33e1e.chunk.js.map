{"version":3,"sources":["components/Country.js","components/Countries.js","components/Search.js","components/Filter.js","components/Header.js","components/Paginations.js","components/CountryDetails.js","App.js","index.js"],"names":["Country","data","darkMode","className","to","name","common","alt","src","flags","area","toString","replace","region","capital","Countries","page","start","end","sort","a","b","slice","map","country","Search","changeHandler","type","placeholder","onChange","Filter","FormControl","fullWidth","variant","sx","border","outline","InputLabel","id","Select","labelId","value","label","MenuItem","Header","clickHandler","onClick","Paginations","resultsCount","pageCount","Math","ceil","Stack","spacing","Pagination","count","shape","color","_","CountryDetails","App","useState","countries","setcountries","searchRes","setsearchRes","setregion","pageNo","setpageNo","setdarkMode","useEffect","loadCountries","continent","fetch","then","res","json","document","body","classList","toggle","exact","path","e","length","target","searchResults","filter","includes","toLowerCase","filteredResults","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.04f33e1e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Country({ data, darkMode }) {\r\n  return (\r\n    <div className={`country ${darkMode}`}>\r\n      <Link to={data.name.common}>\r\n        <img alt=\"country-flag\" src={data.flags[0]} className=\"flag\"></img>\r\n\r\n        <div className=\"country-details\">\r\n          <h2>{data.name.common}</h2>\r\n          <div className=\"population\">\r\n            <p>\r\n              <b>Area:</b>{\" \"}\r\n              {data.area.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n                \" km2\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"region\">\r\n            <p>\r\n              <b>Region:</b> {data.region}\r\n            </p>\r\n          </div>\r\n          <div className=\"capital\">\r\n            <p>\r\n              <b>Capital:</b> {data.capital}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport Country from \"./Country\";\r\nfunction Countries({ data, page, darkMode }) {\r\n  if (!data) return null;\r\n  const resPerPage = 20,\r\n    start = (page - 1) * resPerPage,\r\n    end = page * resPerPage;\r\n  const dataPortion = data\r\n    .sort((a, b) => (a.name.common > b.name.common ? 1 : -1))\r\n    .slice(start, end);\r\n  const countries = dataPortion.map((country) => {\r\n    return <Country data={country} darkMode={darkMode} />;\r\n  });\r\n  // Regular Methods\r\n  const loadCountries = function (countries) {\r\n    countries.map((country) => <Country country={country} />);\r\n  };\r\n\r\n  return countries;\r\n}\r\n\r\nexport default Countries;\r\n","import React from \"react\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\n\r\nfunction Search({ changeHandler, darkMode }) {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <BiSearchAlt2 className={`search-icon ${darkMode}`} />\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search for a country...\"\r\n        onChange={changeHandler}\r\n        className={`${darkMode}`}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, Select, InputLabel, MenuItem } from \"@mui/material\";\r\n\r\nfunction Filter({ changeHandler, region, darkMode }) {\r\n  // States\r\n\r\n  // Regular Functions\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <FormControl\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        sx={{ border: \"none\", outline: \"none\" }}\r\n      >\r\n        <InputLabel id=\"filter-label\" className={`${darkMode}`}>\r\n          Filter by Region:\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"filter-label\"\r\n          id=\"filter\"\r\n          value={region}\r\n          label=\"filter\"\r\n          onChange={changeHandler}\r\n          className={`${darkMode}`}\r\n        >\r\n          <MenuItem value=\"None\" className=\"menu-item\" id=\"top\">\r\n            All Countries\r\n          </MenuItem>\r\n          <MenuItem value={\"Africa\"} className=\"menu-item\">\r\n            Africa\r\n          </MenuItem>\r\n          <MenuItem value={\"Americas\"} className=\"menu-item\">\r\n            America\r\n          </MenuItem>\r\n          <MenuItem value={\"Asia\"} className=\"menu-item\">\r\n            Asia\r\n          </MenuItem>\r\n          <MenuItem value={\"Europe\"} className=\"menu-item\">\r\n            Europe\r\n          </MenuItem>\r\n          <MenuItem value={\"Oceania\"} className=\"menu-item\">\r\n            Oceania\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { RiMoonClearLine, RiMoonClearFill } from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header({ clickHandler, darkMode }) {\r\n  return (\r\n    <div className={`header ${darkMode}`}>\r\n      <Link to=\"/\">\r\n        <h1 className=\"title\">Where in the World?</h1>\r\n      </Link>\r\n      <button className={`toggle ${darkMode}`} onClick={clickHandler}>\r\n        {darkMode === \"\" ? (\r\n          <RiMoonClearLine className=\"icon\" />\r\n        ) : (\r\n          <RiMoonClearFill className=\"icon\" />\r\n        )}\r\n\r\n        <p>Dark Mode</p>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function Paginations({ changeHandler, resultsCount }) {\r\n  if (resultsCount === 0) return null;\r\n  let pageCount = Math.ceil(resultsCount / 20);\r\n  return (\r\n    <Stack spacing={2} className=\"pagination\">\r\n      <Pagination\r\n        count={pageCount}\r\n        shape=\"rounded\"\r\n        color=\"primary\"\r\n        onChange={(_, page) => changeHandler(page)}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CountryDetails() {\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <h1>Back to Home</h1>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryDetails;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Countries from \"./components/Countries\";\nimport Search from \"./components/Search\";\nimport Filter from \"./components/Filter\";\nimport Header from \"./components/Header\";\nimport Paginations from \"./components/Paginations\";\nimport CountryDetails from \"./components/CountryDetails\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  //States\n  const [countries, setcountries] = useState(``);\n  const [searchRes, setsearchRes] = useState(``);\n  const [region, setregion] = useState(``);\n  const [pageNo, setpageNo] = useState(1);\n  const [darkMode, setdarkMode] = useState(\"\");\n\n  //LifeCycle Hooks\n  useEffect(() => {\n    loadCountries();\n  }, []);\n\n  //Regular Methods\n  const loadCountries = function (continent) {\n    if (!continent) {\n      fetch(\"https://restcountries.com/v3/all\")\n        .then((res) => res.json())\n        .then((data) => {\n          setcountries(data);\n          setsearchRes(data);\n        });\n    }\n  };\n\n  const changeHandler = (e) => {\n    if (countries.length < 1) return null;\n    setpageNo(1);\n    if (e.target.value.length < 1) setsearchRes(countries);\n    const searchResults = countries.filter(\n      (country) =>\n        country.name.common.includes(e.target.value) ||\n        country.name.common.toLowerCase().includes(e.target.value)\n    );\n    if (searchResults.length > 0) {\n      setsearchRes(searchResults);\n    }\n  };\n\n  const filterHandler = (e) => {\n    // While results are loaded.\n    if (searchRes.length < 1) return null;\n    setpageNo(1);\n    // Set filter value\n    setregion(e.target.value);\n    // When No filter is applied\n    if (e.target.value === \"None\") setsearchRes(countries);\n    // When filter is selected\n    const filteredResults = countries.filter((country) => {\n      if (country.region === e.target.value) return country;\n    });\n    if (e.target.value !== \"None\") setsearchRes(filteredResults);\n  };\n\n  const paginationHandler = (pageNo) => {\n    console.log(pageNo);\n    if (searchRes.length < 1) return;\n    setpageNo(pageNo);\n  };\n\n  const darkModeHandler = () => {\n    darkMode === \"\" ? setdarkMode(\"dark-mode\") : setdarkMode(\"\");\n    document.body.classList.toggle(\"dark-mode-bg\");\n  };\n  //JSX\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header clickHandler={darkModeHandler} darkMode={darkMode} />\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"search-filter\">\n              <Search changeHandler={changeHandler} darkMode={darkMode} />\n              <Filter\n                changeHandler={filterHandler}\n                region={region}\n                darkMode={darkMode}\n              />\n            </div>\n            <div className=\"countries-container\">\n              <Countries data={searchRes} page={pageNo} darkMode={darkMode} />\n            </div>\n            <Paginations\n              changeHandler={paginationHandler}\n              resultsCount={searchRes.length}\n              darkMode={darkMode}\n            />\n          </Route>\n          <Route exact path=\"/afghanistana\">\n            <CountryDetails />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}